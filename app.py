import telebot
from telebot import types
import json
import time
from datetime import datetime, timedelta

BOT_TOKEN = '7220349197:AAF6LxnRHGuDds3isgbFMKSER8rMquwx_hw'
ADMIN_KEY = 'Dƒ∞LPROMEYH4'

bot = telebot.TeleBot(BOT_TOKEN)

# Ulanyjy maglumatlaryny √Ω√ºkle we sakla funksi√Ωalary
def load_users():
    try:
        with open('users.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except:
        return {}

def save_users(data):
    with open('users.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)

def is_premium(user):
    if user is None:
        return False
    if 'premium' in user:
        now = int(time.time())
        return now < user['premium']
    return False

def format_profile(user_id, user):
    if user is None:
        return "Ulanyjy tapylmady."
    premium_text = ""
    if is_premium(user):
        dt = datetime.fromtimestamp(user['premium']).strftime('%d.%m.%Y')
        premium_text = f"\nüí∞ –ü–ª–∞—Ç–Ω—ã –í–µ—Ä—Å–∏–∞ ‚úÖ\nüìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {dt}\nüÜì –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {user.get('used', 0)}/‚àû"
    else:
        premium_text = f"\nüí∞ –ë–µ–∑–ø–ª–∞—Ç–Ω—ã –í–µ—Ä—Å–∏–∞ üÜì\n‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞\nüÜì –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {user.get('used', 0)}/3"

    return f"üë§ Profilim\n\nüÜî ID: {user_id}\nüë§ –ò–º—è: {user.get('name', 'N/A')}{premium_text}"

# --- MEN√ùULAR ---
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('ü§ñ Sorag Ba≈ülamak?', 'üë§ PROFƒ∞L')
    markup.add('üíé PREMƒ∞UM ALMAK', 'üåê DIL U√ùTGETMEK')
    return markup

def back_button_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('‚¨ÖÔ∏è Yza ga√Ωt')
    return markup

def sorag_start_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üÜì Mugt Versi√Ωa', 'üíé Premium Versi√Ωa')
    markup.add('‚¨ÖÔ∏è Yza ga√Ωt')
    return markup

def dil_uytgetme_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üáπüá≤ T√úRKMEN', 'üá∑üá∫ RUS', 'üá¨üáß ENGLISH')
    markup.add('‚¨ÖÔ∏è Yza ga√Ωt')
    return markup

def admin_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üë§ Ulanyja Premium Bermek', '‚¨ÖÔ∏è √áykmak')
    return markup

# --- KOMANDALAR ---
@bot.message_handler(commands=['start'])
def start_handler(message):
    user_id = str(message.from_user.id)
    users = load_users()
    if user_id not in users:
        users[user_id] = {'name': message.from_user.first_name, 'used': 0, 'lang': 'tm'}
        save_users(users)
    bot.send_message(message.chat.id, "üëã Ho≈ü geldi≈àiz! Men size k√∂mek etm√§ge ta√Ω√Ωar!", reply_markup=main_menu())

@bot.message_handler(func=lambda m: m.text == '‚¨ÖÔ∏è Yza ga√Ωt')
def back_handler(message):
    bot.send_message(message.chat.id, "Ba≈ü men√Ωu:", reply_markup=main_menu())

@bot.message_handler(func=lambda m: m.text == 'ü§ñ Sorag Ba≈ülamak?')
def sorag_baslamak(message):
    bot.send_message(message.chat.id, "Ha√Ωsy g√∂rn√º≈üde dowam etmek isle√Ω√§rsi≈àiz?", reply_markup=sorag_start_menu())

@bot.message_handler(func=lambda m: m.text == 'üÜì Mugt Versi√Ωa')
def mugt_version(message):
    user_id = str(message.from_user.id)
    users = load_users()
    user = users.get(user_id)
    if user is None:
        users[user_id] = {'name': message.from_user.first_name, 'used': 0, 'lang': 'tm'}
        user = users[user_id]
        save_users(users)

    if is_premium(user):
        bot.send_message(message.chat.id, "Siz e√Ω√Ω√§m Premium ulanyjy!", reply_markup=back_button_menu())
        return

    if user.get('used', 0) >= 3:
        bot.send_message(message.chat.id, "‚ùå Mugt limiti≈àize √Ωetdi≈àiz. Premium aly≈à.", reply_markup=back_button_menu())
    else:
        user['used'] = user.get('used', 0) + 1
        save_users(users)
        bot.send_message(message.chat.id, "‚úÖ Sorag kabul edildi! (Mugt ulany≈ü)", reply_markup=back_button_menu())

@bot.message_handler(func=lambda m: m.text == 'üíé Premium Versi√Ωa')
def premium_access(message):
    user_id = str(message.from_user.id)
    users = load_users()
    user = users.get(user_id)
    if is_premium(user):
        bot.send_message(message.chat.id, "‚úÖ Premium sorag kabul edildi!", reply_markup=back_button_menu())
    else:
        bot.send_message(message.chat.id, "üö´ Sizde Premium √Ωok. Ilki Premium aly≈à!", reply_markup=back_button_menu())

@bot.message_handler(func=lambda m: m.text == 'üë§ PROFƒ∞L')
def profile_handler(message):
    user_id = str(message.from_user.id)
    users = load_users()
    user = users.get(user_id)
    bot.send_message(message.chat.id, format_profile(user_id, user), reply_markup=back_button_menu())

@bot.message_handler(func=lambda m: m.text == 'üíé PREMƒ∞UM ALMAK')
def premium_info(message):
    bot.send_message(message.chat.id, "Premium almak √º√ßin üëâ t.me/DaykaH4 bilen habarla≈üy≈à!\n7 g√ºnl√ºk we 30 g√ºnl√ºk wariantlar el√Ωeterli.", reply_markup=back_button_menu())

@bot.message_handler(func=lambda m: m.text == 'üåê DIL U√ùTGETMEK')
def change_lang(message):
    bot.send_message(message.chat.id, "Dil sa√Ωla≈à:", reply_markup=dil_uytgetme_menu())

@bot.message_handler(func=lambda m: m.text in ['üáπüá≤ T√úRKMEN', 'üá∑üá∫ RUS', 'üá¨üáß ENGLISH'])
def set_lang(message):
    lang_code = {
        'üáπüá≤ T√úRKMEN': 'tm',
        'üá∑üá∫ RUS': 'ru',
        'üá¨üáß ENGLISH': 'en'
    }
    user_id = str(message.from_user.id)
    users = load_users()
    if user_id in users:
        users[user_id]['lang'] = lang_code[message.text]
        save_users(users)
    bot.send_message(message.chat.id, "‚úÖ Dil √ºst√ºnlikli √º√Ωtgedildi!", reply_markup=back_button_menu())

# --- ADMIN PANEL ---

admin_sessions = set()

@bot.message_handler(commands=['admin'])
def admin_panel(message):
    parts = message.text.split()
    if len(parts) == 2 and parts[1] == ADMIN_KEY:
        admin_sessions.add(message.from_user.id)
        bot.send_message(message.chat.id, "üîê Admin panel a√ßyldy!", reply_markup=admin_menu())
    else:
        bot.send_message(message.chat.id, "‚ùå N√§dogry a√ßar s√∂z!")

def is_admin(user_id):
    return user_id in admin_sessions

@bot.message_handler(func=lambda m: is_admin(m.from_user.id) and m.text == 'üë§ Ulanyja Premium Bermek')
def premium_bermek(message):
    bot.send_message(message.chat.id, "Ulanyjy ID + g√ºn √Ωaz: (meselem: 123456789 7)", reply_markup=back_button_menu())
    bot.register_next_step_handler(message, process_premium)

def process_premium(message):
    try:
        user_id, days = message.text.split()
        days = int(days)
        users = load_users()
        if user_id in users:
            now = int(time.time())
            premium_until = users[user_id].get('premium', 0)
            if now > premium_until:
                users[user_id]['premium'] = now + days * 86400
            else:
                users[user_id]['premium'] += days * 86400
            save_users(users)
            bot.send_message(message.chat.id, f"‚úÖ {days} g√ºn Premium berildi!", reply_markup=admin_menu())
        else:
            bot.send_message(message.chat.id, "Ulanyjy tapylmady!", reply_markup=admin_menu())
    except:
        bot.send_message(message.chat.id, "‚ùå N√§dogry format. ID + g√ºn √Ωazmaly", reply_markup=admin_menu())

@bot.message_handler(func=lambda m: is_admin(m.from_user.id) and m.text == '‚¨ÖÔ∏è √áykmak')
def admin_exit(message):
    admin_sessions.discard(message.from_user.id)
    bot.send_message(message.chat.id, "Admin panelden √ßykdy≈à.", reply_markup=main_menu())

# --- Programma i≈üledil√Ω√§r ---
bot.infinity_polling()
